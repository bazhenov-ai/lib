#!/bin/bash
# –°–æ–∑–¥–∞–Ω–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ú.

reverse_file() {
    local input_file="bss.md"
    local output_file="backwards_proofreading.txt"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    if [[ ! -f "$input_file" ]]; then
        echo "‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª $input_file –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi

    echo "üöÄ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞..."
    echo "=========================================="

    # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫
    echo "üìä –ü–æ–¥—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ñ–∞–π–ª–∞..."
    local total_lines=$(wc -l < "$input_file")
    echo "‚úÖ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: $total_lines"

    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ (–±–µ–∑ —Å–∏–º–≤–æ–ª–æ–≤ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏)
    local total_chars=0
    while IFS= read -r line; do
        ((total_chars += ${#line}))
    done < "$input_file"
    echo "‚úÖ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤: $total_chars"
    echo

    # –®–∞–≥ 1: –†–µ–≤–µ—Ä—Å –ø–æ—Ä—è–¥–∫–∞ —Å—Ç—Ä–æ–∫ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
    echo "üîÑ –≠—Ç–∞–ø 1: –†–µ–≤–µ—Ä—Å –ø–æ—Ä—è–¥–∫–∞ —Å—Ç—Ä–æ–∫..."
    local current_line=0

    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–≤–µ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
    local temp_file1=$(mktemp)
    declare -a lines_arr

    {
        while IFS= read -r line; do
            lines_arr[$current_line]="$line"
            current_line=$((current_line + 1))

            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
            if [[ $((current_line % 100)) -eq 0 ]] || [[ $current_line -eq $total_lines ]]; then
                local percent=$((current_line * 100 / total_lines))
                local filled=$((percent * 50 / 100))
                local empty=$((50 - filled))

                printf "\r\033[32müü¢ [%s%s] %3d%% (%d/%d —Å—Ç—Ä–æ–∫)\033[0m" \
                    "$(printf '‚ñà%.0s' $(seq 1 $filled))" \
                    "$(printf '‚ñë%.0s' $(seq 1 $empty))" \
                    "$percent" "$current_line" "$total_lines"
            fi
        done < "$input_file"

        echo -e "\n‚úÖ –°—Ç—Ä–æ–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –ø–∞–º—è—Ç—å"

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–ø–∏—Å–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        echo "üìù –ó–∞–ø–∏—Å—å —Å—Ç—Ä–æ–∫ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ..."
        for ((i = current_line - 1; i >= 0; i--)); do
            echo "${lines_arr[i]}" >> "$temp_file1"

            local percent=$(((current_line - i) * 100 / current_line))
            local filled=$((percent * 50 / 100))
            local empty=$((50 - filled))

            if [[ $(((current_line - i) % 100)) -eq 0 ]] || [[ $i -eq 0 ]]; then
                printf "\r\033[32müü¢ [%s%s] %3d%% (%d/%d —Å—Ç—Ä–æ–∫)\033[0m" \
                    "$(printf '‚ñà%.0s' $(seq 1 $filled))" \
                    "$(printf '‚ñë%.0s' $(seq 1 $empty))" \
                    "$percent" "$((current_line - i))" "$current_line"
            fi
        done
    }

    echo -e "\n‚úÖ –≠—Ç–∞–ø 1 –∑–∞–≤–µ—Ä—à–µ–Ω!"

    # –®–∞–≥ 2: –†–µ–≤–µ—Ä—Å —Å–∏–º–≤–æ–ª–æ–≤ –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
    echo
    echo "üî§ –≠—Ç–∞–ø 2: –†–µ–≤–µ—Ä—Å —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö..."

    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    local temp_file2=$(mktemp)
    local current_line=0
    local processed_chars=0

    {
        while IFS= read -r line; do
            # –†–µ–≤–µ—Ä—Å–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É
            local reversed_line=$(echo "$line" | rev)
            echo "$reversed_line" >> "$temp_file2"

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
            local line_length=${#line}
            processed_chars=$((processed_chars + line_length))
            current_line=$((current_line + 1))

            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –∫–∞–∂–¥—ã–µ 100 —Å—Ç—Ä–æ–∫ –∏–ª–∏ –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ —á–∞—â–µ
            if [[ $((current_line % 100)) -eq 0 ]] || [[ $current_line -eq $total_lines ]]; then
                local percent=$((processed_chars * 100 / total_chars))
                local filled=$((percent * 50 / 100))
                local empty=$((50 - filled))

                printf "\r\033[32müî† [%s%s] %3d%% (%d/%d —Å–∏–º–≤–æ–ª–æ–≤)\033[0m" \
                    "$(printf '‚ñà%.0s' $(seq 1 $filled))" \
                    "$(printf '‚ñë%.0s' $(seq 1 $empty))" \
                    "$percent" "$processed_chars" "$total_chars"
            fi
        done < "$temp_file1"
    }

    echo -e "\n‚úÖ –≠—Ç–∞–ø 2 –∑–∞–≤–µ—Ä—à–µ–Ω!"

    # –ö–æ–ø–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
    cp "$temp_file2" "$output_file"

    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    rm -f "$temp_file1" "$temp_file2"

    echo
    echo "=========================================="
    echo "üéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo "üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $output_file"

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
    local output_lines=$(wc -l < "$output_file")
    local output_chars=0
    while IFS= read -r line; do
        ((output_chars += ${#line}))
    done < "$output_file"
    echo "üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–æ–∫: $output_lines"
    echo "üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–∏–º–≤–æ–ª–æ–≤: $output_chars"
}

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
reverse_file
